{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alerts","_jsxs","class","concat","type","role","children","_jsx","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","className","mode","href","title","id","onClick","modeToggler","htmlFor","style","color","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","prev","setPrev","_useState5","_useState6","copyText","setCopyText","_Fragment","heading","rows","value","onChange","event","target","backgroundColor","showAlert","navigator","clipboard","writeText","newText","split","join","length","prototypes","PropTypes","string","about","defaultProps","App","setMode","alert","setAlert","message","alertType","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.2258caf1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alerts &&  <div class={`alert alert-${props.alerts.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alerts.type)}</strong> {props.alerts.msg}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.modeToggler}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{color:(props.mode === 'dark'?'white':'black')}} >\r\n             {props.mode === 'dark'?'Light Mode':'Dark Mode'}\r\n            </label>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Default Title\",\r\n  about: \"Default about\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [prev, setPrev] = useState(\"\");\r\n  const [copyText, setCopyText] = useState(\"Copy Text\");\r\n\r\n  const changeHandler = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const upperHandler = () => {\r\n    let newText = text;\r\n    setText(newText.toUpperCase());\r\n    props.showAlert('Converted to upper case','success')\r\n  };\r\n\r\n  const lowerHandler = () => {\r\n    let newText = text;\r\n    setText(newText.toLowerCase());\r\n    props.showAlert('Converted to lower case','success')\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    setPrev(text);\r\n    let newText = '';\r\n    setText(newText);\r\n    setCopyText(\"Copy Text\");   \r\n  };\r\n\r\n  const prevHandler = () => {\r\n    setText(prev);\r\n  };\r\n\r\n  const copyHandler = () => {\r\n    navigator.clipboard.writeText(text);\r\n    setCopyText(\"copied !\");\r\n    props.showAlert('copied !!','info')\r\n  };\r\n\r\n  const extraSpaceHandler = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            aria-label=\"With textarea\"\r\n            rows={10}\r\n            value={text}\r\n            onChange={changeHandler}\r\n             style={{backgroundColor:(props.mode === 'light'?'white':'#293958'),color:(props.mode === 'light'?'black':'white')}}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <button className=\"btn btn-primary mx-1\" onClick={upperHandler}>\r\n            Upper Case\r\n          </button>\r\n          <button className=\"btn btn-secondary mx-1\" onClick={lowerHandler}>\r\n            Lower Case\r\n          </button>          \r\n          <button className=\"btn btn-warning mx-1\" onClick={copyHandler}>\r\n           {copyText}\r\n          </button>\r\n          <button className=\"btn btn-success mx-1\" onClick={extraSpaceHandler}>\r\n            Remove Extra spaces\r\n          </button>\r\n          <button className=\"btn btn-dark mx-1\" onClick={prevHandler}>\r\n           Previous Text\r\n          </button>\r\n          <button className=\"btn btn-danger mx-1\" onClick={clearHandler}>\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n        <div className=\"my-3\">\r\n          <h2 className=\"my-2\">Text Summery</h2>\r\n          <p><strong><mark>{text.split(' ').length}</mark> words and <mark>{text.length}</mark> characters</strong></p>\r\n          <p>Time required to read this text : <mark>{0.24*(text.split(' ').length)} Seconds</mark>\r\n           <strong className=\"mx-3\">OR</strong> <mark>{0.004*(text.split(' ').length)} Minutes</mark> </p>\r\n        </div>\r\n\r\n        <div className=\"my-3 border pad\">\r\n          <h2 className=\"my-2 text-center\">Preview</h2>\r\n           <strong><em>{(text !== '')?text:'Enter something in the textbox above to preview it here'}</em></strong>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, alertType) => {\n    setAlert({\n      msg: message,\n      type: alertType,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const ToggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n\n      document.body.style.backgroundColor = \"#051639\";\n      document.body.style.color = \"white\";\n\n      // Alert Setting\n\n      showAlert(\"You have choose Dark Mode\", \"success\");\n\n      // Set Title On Interval Mode\n      // setInterval(() => {\n      //   document.title = \"TextUtil is Great !!\";\n      // }, 1000);\n\n      // setInterval(() => {\n      //   document.title = \"TextUtil is Nice !!\";\n      // }, 2000);\n    } else {\n      setMode(\"light\");\n\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n\n      // Alert Setting\n\n      showAlert(\"You have choose Light Mode\", \"info\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          about=\"About Us\"\n          mode={mode}\n          modeToggler={ToggleMode}\n        />\n        <Alert alerts={alert} />\n        <div className=\"container my-3\">\n          <TextForm\n            heading=\"Enter text to format\"\n            mode={mode}\n            showAlert={showAlert}\n          />\n          {/* <Routes>\n                    <Route exact path=\"/about\" element={<About heading=\"About Us\" />}>                      \n                    </Route>\n                    <Route exact path=\"/\" element={<TextForm heading=\"Enter text to format\" mode={mode} showAlert={showAlert} />} />\n                </Routes>            */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}